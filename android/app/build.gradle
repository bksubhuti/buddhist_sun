plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

// Load keystore properties for app signing
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

// Load API key properties
def apiKeyProperties = new Properties()
def apiKeyPropertiesFile = rootProject.file('api_keys.properties')
if (apiKeyPropertiesFile.exists()) {
    apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))
   } else {
    println("api_keys.properties file not found!")
}
android {
    namespace "com.bksubhuti.buddhistsun"
    compileSdk = 36
    ndkVersion "27.2.12479018"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    
defaultConfig {
    applicationId "com.bksubhuti.buddhistsun"
    minSdkVersion flutter.minSdkVersion
    targetSdkVersion flutter.targetSdkVersion
    versionCode flutterVersionCode.toInteger()
    versionName flutterVersionName
    resValue "string", "google_maps_key", (apiKeyProperties['GOOGLE_MAPS_API_KEY'] ?: "")
 
//    manifestPlaceholders = [
//        mapsApiKey: "$System.env.MAPS_API_KEY",
    //    applicationName: "io.flutter.app.FlutterApplication"  // or your custom application class

  //  ]
}
    println("API Key: " + apiKeyProperties['GOOGLE_MAPS_API_KEY'])


     signingConfigs {
         release {
             keyAlias keystoreProperties['keyAlias']
             keyPassword keystoreProperties['keyPassword']
             storeFile file(keystoreProperties['storeFile'])
             storePassword keystoreProperties['storePassword']
         }
     }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.release
            //signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
